name: SonarQube - Front & Back

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  Analyze_project:
    runs-on: ubuntu-latest
    steps:
      - name: Récupère le code du dépôt.
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Installe Tree.
        run: sudo apt-get update && sudo apt-get install -y tree

      - name: Cache les paquets SonarQube pour les prochaines executions.
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # Backend
      - name: Configure JDK 11.
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"
          cache: maven

      - name: Cache les dépendances Maven pour les prochaines executions.
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Compile le projet Maven.
        run: |
          cd back
          mvn -B package --file pom.xml

      - name: Exécute les tests et génère le rapport JaCoCo.
        run: |
          cd back
          mvn test --file pom.xml

      - name: Ajoute le rapport de test JaCoCo à l'artéfact.
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco

      # Frontend
      - name: Installe Node.
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: front/package-lock.json

      - name: Installe les dépendances front.
        run: |
          cd front
          npm ci

      - name: Compile le front.
        run: |
          cd front
          npm run build

      - name: Exécute les tests et génère le rapport Jasmine.
        run: |
          cd front
          npm test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Ajoute le rapport de test Jasmine à l'artéfact.
        uses: actions/upload-artifact@v4
        with:
          name: karma-report
          path: front/coverage

      # SonarQube
      - name: Affiche la structure du dépôt.
        run: tree .

      - name: Exécute l’analyse SonarCloud.
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    

      # Docker
      - name: S’identifie sur Docker Hub.
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construit Les images back et front.
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest back
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest front

      - name: Pousse les images back et front sur Docker Hub.
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-frontend:latest